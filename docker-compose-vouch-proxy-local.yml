### For development purposes only ###
version: '3.8'
services:
  nginx:
    image: library/nginx:1
    container_name: pr-nginx
    ports:
      - 8080:80
      - 8443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl
#    networks:
#      - frontend
    restart: on-failure

  api-server:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: pr-api-server
    depends_on:
      database:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST:-pr-database}
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-uiservice}
      - SWAGGER_HOST=${SWAGGER_HOST:-127.0.0.1:5000}
      - LDAP_HOST=${LDAP_HOST:-localhost}
      - LDAP_USER=${LDAP_USER:-ldapuser}
      - LDAP_PASSWORD=${LDAP_PASSWORD:-ldappass}
      - LDAP_SEARCH_BASE=${LDAP_SEARCH_BASE:-ldapbase}
      - UIS_USER_DATA=${UIS_USER_DATA:-none}
      - UIS_SEARCH_MIN_CHAR_COUNT=${UIS_SEARCH_MIN_CHAR_COUNT:-3}
      - UIS_SKIP_CILOGON_VALIDATION=${UIS_SKIP_CILOGON_VALIDATION:-false}
      - UIS_CILOGON_CERTS=${UIS_CILOGON_CERTS:-"https://cilogon.org/oauth2/certs"}
      - UIS_CILOGON_AUDIENCE=${UIS_CILOGON_AUDIENCE:-"cilogon:/client_id/1234567890"}
      - UIS_CILOGON_KEY_REFRESH=${UIS_CILOGON_KEY_REFRESH:-"00:10:00"}
      - UIS_COAPI_USER=${UIS_COAPI_USER:-apiuser}
      - UIS_COAPI_KEY=${UIS_COAPI_KEY:-apikey}
      - UIS_COID=${UIS_COID:-11}
      - UIS_CO_ACTIVE_USERS_COU=${UIS_CO_ACTIVE_USERS_COU:-111}
      - UIS_CO_REGISTRY_URL=${UIS_CO_REGISTRY_URL:-"https://registry-test.cilogon.org/registry/"}
#    ports:
#      - 5000:5000
#    networks:
#      - frontend
#      - backend
    restart: on-failure

  database:
    image: library/postgres:12
    container_name: pr-database
#    ports:
#      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-uiservice}
      - PGDATA=${PGDATA:-/var/lib/postgresql/data/pgdata}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
#    networks:
#      - backend
    restart: on-failure

  vouch-proxy:
    container_name: pr-vouch-proxy
    image: voucher/vouch-proxy
#    ports:
#      - 9090:9090
    volumes:
      - ./vouch:/config
#    networks:
#      - frontend
    restart: unless-stopped

#networks:
#  frontend:
#  backend:
#    internal: true
