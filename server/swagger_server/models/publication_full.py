# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PublicationFull(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: str=None, authors: str=None, year: int=None, month: int=None, day: int=None, venue: str=None, publisher: str=None, doi: str=None):  # noqa: E501
        """PublicationFull - a model defined in Swagger

        :param title: The title of this PublicationFull.  # noqa: E501
        :type title: str
        :param authors: The authors of this PublicationFull.  # noqa: E501
        :type authors: str
        :param year: The year of this PublicationFull.  # noqa: E501
        :type year: int
        :param month: The month of this PublicationFull.  # noqa: E501
        :type month: int
        :param day: The day of this PublicationFull.  # noqa: E501
        :type day: int
        :param venue: The venue of this PublicationFull.  # noqa: E501
        :type venue: str
        :param publisher: The publisher of this PublicationFull.  # noqa: E501
        :type publisher: str
        :param doi: The doi of this PublicationFull.  # noqa: E501
        :type doi: str
        """
        self.swagger_types = {
            'title': str,
            'authors': str,
            'year': int,
            'month': int,
            'day': int,
            'venue': str,
            'publisher': str,
            'doi': str
        }

        self.attribute_map = {
            'title': 'title',
            'authors': 'authors',
            'year': 'year',
            'month': 'month',
            'day': 'day',
            'venue': 'venue',
            'publisher': 'publisher',
            'doi': 'doi'
        }
        self._title = title
        self._authors = authors
        self._year = year
        self._month = month
        self._day = day
        self._venue = venue
        self._publisher = publisher
        self._doi = doi

    @classmethod
    def from_dict(cls, dikt) -> 'PublicationFull':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Publication_full of this PublicationFull.  # noqa: E501
        :rtype: PublicationFull
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this PublicationFull.


        :return: The title of this PublicationFull.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this PublicationFull.


        :param title: The title of this PublicationFull.
        :type title: str
        """

        self._title = title

    @property
    def authors(self) -> str:
        """Gets the authors of this PublicationFull.


        :return: The authors of this PublicationFull.
        :rtype: str
        """
        return self._authors

    @authors.setter
    def authors(self, authors: str):
        """Sets the authors of this PublicationFull.


        :param authors: The authors of this PublicationFull.
        :type authors: str
        """

        self._authors = authors

    @property
    def year(self) -> int:
        """Gets the year of this PublicationFull.


        :return: The year of this PublicationFull.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year: int):
        """Sets the year of this PublicationFull.


        :param year: The year of this PublicationFull.
        :type year: int
        """

        self._year = year

    @property
    def month(self) -> int:
        """Gets the month of this PublicationFull.


        :return: The month of this PublicationFull.
        :rtype: int
        """
        return self._month

    @month.setter
    def month(self, month: int):
        """Sets the month of this PublicationFull.


        :param month: The month of this PublicationFull.
        :type month: int
        """

        self._month = month

    @property
    def day(self) -> int:
        """Gets the day of this PublicationFull.


        :return: The day of this PublicationFull.
        :rtype: int
        """
        return self._day

    @day.setter
    def day(self, day: int):
        """Sets the day of this PublicationFull.


        :param day: The day of this PublicationFull.
        :type day: int
        """

        self._day = day

    @property
    def venue(self) -> str:
        """Gets the venue of this PublicationFull.


        :return: The venue of this PublicationFull.
        :rtype: str
        """
        return self._venue

    @venue.setter
    def venue(self, venue: str):
        """Sets the venue of this PublicationFull.


        :param venue: The venue of this PublicationFull.
        :type venue: str
        """

        self._venue = venue

    @property
    def publisher(self) -> str:
        """Gets the publisher of this PublicationFull.


        :return: The publisher of this PublicationFull.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher: str):
        """Sets the publisher of this PublicationFull.


        :param publisher: The publisher of this PublicationFull.
        :type publisher: str
        """

        self._publisher = publisher

    @property
    def doi(self) -> str:
        """Gets the doi of this PublicationFull.


        :return: The doi of this PublicationFull.
        :rtype: str
        """
        return self._doi

    @doi.setter
    def doi(self, doi: str):
        """Sets the doi of this PublicationFull.


        :param doi: The doi of this PublicationFull.
        :type doi: str
        """

        self._doi = doi
