# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.author_id_type import AuthorIdType  # noqa: F401,E501
from swagger_server import util


class AuthorId(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, idtype: AuthorIdType=None, idvalue: str=None):  # noqa: E501
        """AuthorId - a model defined in Swagger

        :param idtype: The idtype of this AuthorId.  # noqa: E501
        :type idtype: AuthorIdType
        :param idvalue: The idvalue of this AuthorId.  # noqa: E501
        :type idvalue: str
        """
        self.swagger_types = {
            'idtype': AuthorIdType,
            'idvalue': str
        }

        self.attribute_map = {
            'idtype': 'idtype',
            'idvalue': 'idvalue'
        }
        self._idtype = idtype
        self._idvalue = idvalue

    @classmethod
    def from_dict(cls, dikt) -> 'AuthorId':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuthorId of this AuthorId.  # noqa: E501
        :rtype: AuthorId
        """
        return util.deserialize_model(dikt, cls)

    @property
    def idtype(self) -> AuthorIdType:
        """Gets the idtype of this AuthorId.


        :return: The idtype of this AuthorId.
        :rtype: AuthorIdType
        """
        return self._idtype

    @idtype.setter
    def idtype(self, idtype: AuthorIdType):
        """Sets the idtype of this AuthorId.


        :param idtype: The idtype of this AuthorId.
        :type idtype: AuthorIdType
        """

        self._idtype = idtype

    @property
    def idvalue(self) -> str:
        """Gets the idvalue of this AuthorId.


        :return: The idvalue of this AuthorId.
        :rtype: str
        """
        return self._idvalue

    @idvalue.setter
    def idvalue(self, idvalue: str):
        """Sets the idvalue of this AuthorId.


        :param idvalue: The idvalue of this AuthorId.
        :type idvalue: str
        """

        self._idvalue = idvalue
