# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PeopleShort(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, uuid: str=None, name: str=None, email: str=None, eppn: str=None, oidc_claim_sub: str=None):  # noqa: E501
        """PeopleShort - a model defined in Swagger

        :param uuid: The uuid of this PeopleShort.  # noqa: E501
        :type uuid: str
        :param name: The name of this PeopleShort.  # noqa: E501
        :type name: str
        :param email: The email of this PeopleShort.  # noqa: E501
        :type email: str
        :param eppn: The eppn of this PeopleShort.  # noqa: E501
        :type eppn: str
        :param oidc_claim_sub: The oidc_claim_sub of this PeopleShort.  # noqa: E501
        :type oidc_claim_sub: str
        """
        self.swagger_types = {
            'uuid': str,
            'name': str,
            'email': str,
            'eppn': str,
            'oidc_claim_sub': str
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'name': 'name',
            'email': 'email',
            'eppn': 'eppn',
            'oidc_claim_sub': 'oidc_claim_sub'
        }
        self._uuid = uuid
        self._name = name
        self._email = email
        self._eppn = eppn
        self._oidc_claim_sub = oidc_claim_sub

    @classmethod
    def from_dict(cls, dikt) -> 'PeopleShort':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The People_short of this PeopleShort.  # noqa: E501
        :rtype: PeopleShort
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self) -> str:
        """Gets the uuid of this PeopleShort.


        :return: The uuid of this PeopleShort.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this PeopleShort.


        :param uuid: The uuid of this PeopleShort.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def name(self) -> str:
        """Gets the name of this PeopleShort.


        :return: The name of this PeopleShort.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this PeopleShort.


        :param name: The name of this PeopleShort.
        :type name: str
        """

        self._name = name

    @property
    def email(self) -> str:
        """Gets the email of this PeopleShort.


        :return: The email of this PeopleShort.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this PeopleShort.


        :param email: The email of this PeopleShort.
        :type email: str
        """

        self._email = email

    @property
    def eppn(self) -> str:
        """Gets the eppn of this PeopleShort.


        :return: The eppn of this PeopleShort.
        :rtype: str
        """
        return self._eppn

    @eppn.setter
    def eppn(self, eppn: str):
        """Sets the eppn of this PeopleShort.


        :param eppn: The eppn of this PeopleShort.
        :type eppn: str
        """

        self._eppn = eppn

    @property
    def oidc_claim_sub(self) -> str:
        """Gets the oidc_claim_sub of this PeopleShort.


        :return: The oidc_claim_sub of this PeopleShort.
        :rtype: str
        """
        return self._oidc_claim_sub

    @oidc_claim_sub.setter
    def oidc_claim_sub(self, oidc_claim_sub: str):
        """Sets the oidc_claim_sub of this PeopleShort.


        :param oidc_claim_sub: The oidc_claim_sub of this PeopleShort.
        :type oidc_claim_sub: str
        """

        self._oidc_claim_sub = oidc_claim_sub
