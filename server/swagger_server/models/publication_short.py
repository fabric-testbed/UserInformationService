# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PublicationShort(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: str=None, authors: str=None, year: int=None, doi: str=None):  # noqa: E501
        """PublicationShort - a model defined in Swagger

        :param title: The title of this PublicationShort.  # noqa: E501
        :type title: str
        :param authors: The authors of this PublicationShort.  # noqa: E501
        :type authors: str
        :param year: The year of this PublicationShort.  # noqa: E501
        :type year: int
        :param doi: The doi of this PublicationShort.  # noqa: E501
        :type doi: str
        """
        self.swagger_types = {
            'title': str,
            'authors': str,
            'year': int,
            'doi': str
        }

        self.attribute_map = {
            'title': 'title',
            'authors': 'authors',
            'year': 'year',
            'doi': 'doi'
        }
        self._title = title
        self._authors = authors
        self._year = year
        self._doi = doi

    @classmethod
    def from_dict(cls, dikt) -> 'PublicationShort':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Publication_short of this PublicationShort.  # noqa: E501
        :rtype: PublicationShort
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this PublicationShort.


        :return: The title of this PublicationShort.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this PublicationShort.


        :param title: The title of this PublicationShort.
        :type title: str
        """

        self._title = title

    @property
    def authors(self) -> str:
        """Gets the authors of this PublicationShort.


        :return: The authors of this PublicationShort.
        :rtype: str
        """
        return self._authors

    @authors.setter
    def authors(self, authors: str):
        """Sets the authors of this PublicationShort.


        :param authors: The authors of this PublicationShort.
        :type authors: str
        """

        self._authors = authors

    @property
    def year(self) -> int:
        """Gets the year of this PublicationShort.


        :return: The year of this PublicationShort.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year: int):
        """Sets the year of this PublicationShort.


        :param year: The year of this PublicationShort.
        :type year: int
        """

        self._year = year

    @property
    def doi(self) -> str:
        """Gets the doi of this PublicationShort.


        :return: The doi of this PublicationShort.
        :rtype: str
        """
        return self._doi

    @doi.setter
    def doi(self, doi: str):
        """Sets the doi of this PublicationShort.


        :param doi: The doi of this PublicationShort.
        :type doi: str
        """

        self._doi = doi
