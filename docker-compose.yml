version: '3.8'
services:
  api-server:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: uis-api-server
    depends_on:
      - database
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST:-api-db}
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-uiservice}
      - SWAGGER_HOST=${SWAGGER_HOST:-127.0.0.1:5000}
      - LDAP_HOST=${LDAP_HOST:-localhost}
      - LDAP_USER=${LDAP_USER:-ldapuser}
      - LDAP_PASSWORD=${LDAP_PASSWORD:-ldappass}
      - LDAP_SEARCH_BASE=${LDAP_SEARCH_BASE:-ldapbase}
      - UIS_USER_DATA=${UIS_USER_DATA:-none}
      - UIS_SKIP_CILOGON_VALIDATION=${UIS_SKIP_CILOGON_VALIDATION:-false}
      - UIS_SEARCH_MIN_CHAR_COUNT=${UIS_SEARCH_MIN_CHAR_COUNT:-3}
      - UIS_CILOGON_CERTS=${UIS_CILOGON_CERTS:-"https://cilogon.org/oauth2/certs"}
      - UIS_CILOGON_KEY_REFRESH=${UIS_CILOGON_KEY_REFRESH:-"00:10:00"}
    ports:
      - 5000:5000
#    networks:
#      - frontend
#      - backend
    restart: on-failure

  database:
    image: library/postgres:12
    container_name: uis-database
    ports:
      - 5432:5432
#    networks:
#      - backend
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-uiservice}
      - PGDATA=${PGDATA:-/var/lib/postgresql/data/pgdata}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    restart: on-failure

  nginx:
    image: library/nginx:1
    container_name: uis-nginx
    ports:
      - 8080:80
      - 8443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl
    restart: on-failure

  vouch-proxy:
    container_name: uis-vouch-proxy
    image: voucher/vouch-proxy
    ports:
      - 9090:9090
    volumes:
      - ./vouch:/config
    restart: unless-stopped

