# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UserKey(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, pubkey: str=None, created_on: str=None, keytag: str=None):  # noqa: E501
        """UserKey - a model defined in Swagger

        :param pubkey: The pubkey of this UserKey.  # noqa: E501
        :type pubkey: str
        :param created_on: The created_on of this UserKey.  # noqa: E501
        :type created_on: str
        :param keytag: The keytag of this UserKey.  # noqa: E501
        :type keytag: str
        """
        self.swagger_types = {
            'pubkey': str,
            'created_on': str,
            'keytag': str
        }

        self.attribute_map = {
            'pubkey': 'pubkey',
            'created_on': 'createdOn',
            'keytag': 'keytag'
        }
        self._pubkey = pubkey
        self._created_on = created_on
        self._keytag = keytag

    @classmethod
    def from_dict(cls, dikt) -> 'UserKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserKey of this UserKey.  # noqa: E501
        :rtype: UserKey
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pubkey(self) -> str:
        """Gets the pubkey of this UserKey.


        :return: The pubkey of this UserKey.
        :rtype: str
        """
        return self._pubkey

    @pubkey.setter
    def pubkey(self, pubkey: str):
        """Sets the pubkey of this UserKey.


        :param pubkey: The pubkey of this UserKey.
        :type pubkey: str
        """

        self._pubkey = pubkey

    @property
    def created_on(self) -> str:
        """Gets the created_on of this UserKey.


        :return: The created_on of this UserKey.
        :rtype: str
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on: str):
        """Sets the created_on of this UserKey.


        :param created_on: The created_on of this UserKey.
        :type created_on: str
        """

        self._created_on = created_on

    @property
    def keytag(self) -> str:
        """Gets the keytag of this UserKey.


        :return: The keytag of this UserKey.
        :rtype: str
        """
        return self._keytag

    @keytag.setter
    def keytag(self, keytag: str):
        """Sets the keytag of this UserKey.


        :param keytag: The keytag of this UserKey.
        :type keytag: str
        """

        self._keytag = keytag
