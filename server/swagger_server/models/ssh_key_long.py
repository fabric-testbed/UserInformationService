# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SshKeyLong(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, key_uuid: str=None, public_key: str=None, name: str=None, comment: str=None, description: str=None, fingerprint: str=None, created_on: str=None, expires_on: str=None, deactivated_on: str=None, deactivation_reason: str=None):  # noqa: E501
        """SshKeyLong - a model defined in Swagger

        :param key_uuid: The key_uuid of this SshKeyLong.  # noqa: E501
        :type key_uuid: str
        :param public_key: The public_key of this SshKeyLong.  # noqa: E501
        :type public_key: str
        :param name: The name of this SshKeyLong.  # noqa: E501
        :type name: str
        :param comment: The comment of this SshKeyLong.  # noqa: E501
        :type comment: str
        :param description: The description of this SshKeyLong.  # noqa: E501
        :type description: str
        :param fingerprint: The fingerprint of this SshKeyLong.  # noqa: E501
        :type fingerprint: str
        :param created_on: The created_on of this SshKeyLong.  # noqa: E501
        :type created_on: str
        :param expires_on: The expires_on of this SshKeyLong.  # noqa: E501
        :type expires_on: str
        :param deactivated_on: The deactivated_on of this SshKeyLong.  # noqa: E501
        :type deactivated_on: str
        :param deactivation_reason: The deactivation_reason of this SshKeyLong.  # noqa: E501
        :type deactivation_reason: str
        """
        self.swagger_types = {
            'key_uuid': str,
            'public_key': str,
            'name': str,
            'comment': str,
            'description': str,
            'fingerprint': str,
            'created_on': str,
            'expires_on': str,
            'deactivated_on': str,
            'deactivation_reason': str
        }

        self.attribute_map = {
            'key_uuid': 'key_uuid',
            'public_key': 'public_key',
            'name': 'name',
            'comment': 'comment',
            'description': 'description',
            'fingerprint': 'fingerprint',
            'created_on': 'created_on',
            'expires_on': 'expires_on',
            'deactivated_on': 'deactivated_on',
            'deactivation_reason': 'deactivation_reason'
        }
        self._key_uuid = key_uuid
        self._public_key = public_key
        self._name = name
        self._comment = comment
        self._description = description
        self._fingerprint = fingerprint
        self._created_on = created_on
        self._expires_on = expires_on
        self._deactivated_on = deactivated_on
        self._deactivation_reason = deactivation_reason

    @classmethod
    def from_dict(cls, dikt) -> 'SshKeyLong':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SshKeyLong of this SshKeyLong.  # noqa: E501
        :rtype: SshKeyLong
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_uuid(self) -> str:
        """Gets the key_uuid of this SshKeyLong.


        :return: The key_uuid of this SshKeyLong.
        :rtype: str
        """
        return self._key_uuid

    @key_uuid.setter
    def key_uuid(self, key_uuid: str):
        """Sets the key_uuid of this SshKeyLong.


        :param key_uuid: The key_uuid of this SshKeyLong.
        :type key_uuid: str
        """

        self._key_uuid = key_uuid

    @property
    def public_key(self) -> str:
        """Gets the public_key of this SshKeyLong.


        :return: The public_key of this SshKeyLong.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key: str):
        """Sets the public_key of this SshKeyLong.


        :param public_key: The public_key of this SshKeyLong.
        :type public_key: str
        """

        self._public_key = public_key

    @property
    def name(self) -> str:
        """Gets the name of this SshKeyLong.


        :return: The name of this SshKeyLong.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SshKeyLong.


        :param name: The name of this SshKeyLong.
        :type name: str
        """

        self._name = name

    @property
    def comment(self) -> str:
        """Gets the comment of this SshKeyLong.


        :return: The comment of this SshKeyLong.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment: str):
        """Sets the comment of this SshKeyLong.


        :param comment: The comment of this SshKeyLong.
        :type comment: str
        """

        self._comment = comment

    @property
    def description(self) -> str:
        """Gets the description of this SshKeyLong.


        :return: The description of this SshKeyLong.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this SshKeyLong.


        :param description: The description of this SshKeyLong.
        :type description: str
        """

        self._description = description

    @property
    def fingerprint(self) -> str:
        """Gets the fingerprint of this SshKeyLong.


        :return: The fingerprint of this SshKeyLong.
        :rtype: str
        """
        return self._fingerprint

    @fingerprint.setter
    def fingerprint(self, fingerprint: str):
        """Sets the fingerprint of this SshKeyLong.


        :param fingerprint: The fingerprint of this SshKeyLong.
        :type fingerprint: str
        """

        self._fingerprint = fingerprint

    @property
    def created_on(self) -> str:
        """Gets the created_on of this SshKeyLong.


        :return: The created_on of this SshKeyLong.
        :rtype: str
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on: str):
        """Sets the created_on of this SshKeyLong.


        :param created_on: The created_on of this SshKeyLong.
        :type created_on: str
        """

        self._created_on = created_on

    @property
    def expires_on(self) -> str:
        """Gets the expires_on of this SshKeyLong.


        :return: The expires_on of this SshKeyLong.
        :rtype: str
        """
        return self._expires_on

    @expires_on.setter
    def expires_on(self, expires_on: str):
        """Sets the expires_on of this SshKeyLong.


        :param expires_on: The expires_on of this SshKeyLong.
        :type expires_on: str
        """

        self._expires_on = expires_on

    @property
    def deactivated_on(self) -> str:
        """Gets the deactivated_on of this SshKeyLong.


        :return: The deactivated_on of this SshKeyLong.
        :rtype: str
        """
        return self._deactivated_on

    @deactivated_on.setter
    def deactivated_on(self, deactivated_on: str):
        """Sets the deactivated_on of this SshKeyLong.


        :param deactivated_on: The deactivated_on of this SshKeyLong.
        :type deactivated_on: str
        """

        self._deactivated_on = deactivated_on

    @property
    def deactivation_reason(self) -> str:
        """Gets the deactivation_reason of this SshKeyLong.


        :return: The deactivation_reason of this SshKeyLong.
        :rtype: str
        """
        return self._deactivation_reason

    @deactivation_reason.setter
    def deactivation_reason(self, deactivation_reason: str):
        """Sets the deactivation_reason of this SshKeyLong.


        :param deactivation_reason: The deactivation_reason of this SshKeyLong.
        :type deactivation_reason: str
        """

        self._deactivation_reason = deactivation_reason
