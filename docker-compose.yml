version: '3.8'
services:
  uis-server:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: uis-api-server
    depends_on:
      - database
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST:-api-db}
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-uiservice}
      - SWAGGER_HOST=${SWAGGER_HOST:-127.0.0.1:5000}
      - LDAP_HOST=${LDAP_HOST:-localhost}
      - LDAP_USER=${LDAP_USER:-ldapuser}
      - LDAP_PASSWORD=${LDAP_PASSWORD:-ldappass}
      - LDAP_SEARCH_BASE=${LDAP_SEARCH_BASE:-ldapbase}
      - UIS_USER_DATA=${UIS_USER_DATA:-none}
      - UIS_USER_DB_DROP=${UIS_USER_DB_DROP:-none}
      - UIS_SKIP_CILOGON_VALIDATION=${UIS_SKIP_CILOGON_VALIDATION:-false}
      - UIS_SEARCH_MIN_CHAR_COUNT=${UIS_SEARCH_MIN_CHAR_COUNT:-3}
      - UIS_QUERY_LIMIT=${UIS_QUERY_LIMIT:-10}
      - UIS_CILOGON_CERTS=${UIS_CILOGON_CERTS:-"https://cilogon.org/oauth2/certs"}
      - UIS_CILOGON_KEY_REFRESH=${UIS_CILOGON_KEY_REFRESH:-"00:10:00"}
      - UIS_COAPI_USER=${UIS_COAPI_USER:-apiuser}
      - UIS_COAPI_KEY=${UIS_COAPI_KEY:-apikey}
      - UIS_COID=${UIS_COID:-11}
      - UIS_CO_ACTIVE_USERS_COU=${UIS_CO_ACTIVE_USERS_COU:-111}
      - UIS_CO_REGISTRY_URL=${UIS_CO_REGISTRY_URL:-"https://registry-test.cilogon.org/registry/"}
      - UIS_CO_NAME=${UIS_CO_NAME:-"Fabric"}
      - UIS_CO_SSH_AUTHENTICATOR_ID=${UIS_CO_SSH_AUTHENTICATOR_ID:-123}
      - UIS_SSH_KEY_ALGORITHM=${UIS_SSH_KEY_ALGORITHM:-"rsa"}
      - UIS_SSH_SLIVER_KEY_TO_COMANAGE=${UIS_SSH_SLIVER_KEY_TO_COMANAGE:-"false"}
      - UIS_SSH_BASTION_KEY_VALIDITY_DAYS=${UIS_SSH_BASTION_KEY_VALIDITY_DAYS:-5}
      - UIS_SSH_SLIVER_KEY_VALIDITY_DAYS=${UIS_SSH_SLIVER_KEY_VALIDITY_DAYS:-365}
      - UIS_SSH_GARBAGE_COLLECT_AFTER_DAYS=${UIS_SSH_GARBAGE_COLLECT_AFTER_DAYS:-10}
      - UIS_SSH_KEY_SECRET=${UIS_SSH_KEY_SECRET:-"secret"}
      - UIS_SSH_KEY_QTY_LIMIT=${UIS_SSH_KEY_QTY_LIMIT:-10}
      - POSTGRES_POOL_SIZE=${POSTGRES_POOL_SIZE:-10}
    ports:
      - 6000:6000
#    networks:
#      - frontend
#      - backend
    restart: on-failure

  database:
    image: library/postgres:12
    container_name: uis-database
#    ports:
#      - 5432:5432
#    networks:
#      - backend
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-uiservice}
      - PGDATA=${PGDATA:-/var/lib/postgresql/data/pgdata}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    volumes:
      - /var/uis/:/var/lib/postgresql/data
    restart: on-failure

  nginx:
    image: library/nginx:1
    container_name: uis-nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl
    restart: on-failure

  vouch-proxy:
    container_name: uis-vouch-proxy
    image: voucher/vouch-proxy
#    ports:
#      - 9090:9090
    volumes:
      - ./vouch:/config
    restart: unless-stopped

